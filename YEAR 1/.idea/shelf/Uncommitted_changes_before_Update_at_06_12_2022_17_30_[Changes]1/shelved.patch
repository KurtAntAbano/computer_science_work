Index: date validation.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>date = input(\"input a date\")\r\n\r\ncount = ()\r\n\r\n\r\ndef days_month_check(temp, days, months):\r\n    global count\r\n\r\n\r\n    month_dictionary = {31: [1, 3, 5, 7, 8, 10, 12], 30: [4, 6, 9, 11], 2: 28}\r\n    if temp == True:\r\n        month_dictionary[2] = 29\r\n\r\n    if months in month_dictionary[31]:\r\n        if days <= 31:\r\n            count = True\r\n        else:\r\n            count = False\r\n\r\n    elif months in month_dictionary[30]:\r\n        if days <= 30:\r\n            count = True\r\n        else:\r\n            count = False\r\n\r\n    elif months == 2:\r\n        if days <= month_dictionary[2]:\r\n            count = True\r\n        else:\r\n            count = False\r\n\r\n    else:\r\n        count = False\r\n\r\n    return count\r\n\r\n\r\ndef leap_year(years, days, months):\r\n    div100 = years % 100\r\n\r\n\r\n    if div100 != 0:\r\n        answer = div100 % 4\r\n        if answer == 0:\r\n            temp = True\r\n        else:\r\n            temp = False\r\n        days_month_check(temp, days, months)\r\n\r\n    else:\r\n        answer = years % 400\r\n        if answer == 0:\r\n            temp = True\r\n        else:\r\n            temp = False\r\n        days_month_check(temp, days, months)\r\n\r\n\r\ndef format(date):\r\n    datelen = len(date)\r\n\r\n\r\n    if datelen != 10:\r\n        temp = False\r\n    else:\r\n        temp = True\r\n    return temp\r\n\r\n\r\ndef split(date):\r\n    days = int(date[0:2])\r\n\r\n\r\n    months = int(date[3:5])\r\n    years = int(date[6:10])\r\n    leap_year(years, days, months)\r\n\r\n\r\ndef main(date):\r\n    x = format(date)\r\n\r\n\r\n    while x == False:\r\n        print(\"INVALID!\")\r\n        date = input(\"input a date\")\r\n        x = format(date)\r\n\r\n    if x == True:\r\n        split(date)\r\n        if count == True:\r\n            print(\"THIS DATE IS VALID!\")\r\n        elif count == False:\r\n            print(\"THIS DATE IS INVALID!\")\r\n            date = input(\"input a date\")\r\n            main(date)\r\n\r\nmain(date)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/date validation.py b/date validation.py
--- a/date validation.py	(revision 0e05e366ef90383a3ad22a2b9c8caf4f6835b720)
+++ b/date validation.py	(date 1670347682838)
@@ -1,67 +1,9 @@
 date = input("input a date")
 
-count = ()
-
-
-def days_month_check(temp, days, months):
-    global count
-
-
-    month_dictionary = {31: [1, 3, 5, 7, 8, 10, 12], 30: [4, 6, 9, 11], 2: 28}
-    if temp == True:
-        month_dictionary[2] = 29
-
-    if months in month_dictionary[31]:
-        if days <= 31:
-            count = True
-        else:
-            count = False
-
-    elif months in month_dictionary[30]:
-        if days <= 30:
-            count = True
-        else:
-            count = False
-
-    elif months == 2:
-        if days <= month_dictionary[2]:
-            count = True
-        else:
-            count = False
-
-    else:
-        count = False
-
-    return count
-
-
-def leap_year(years, days, months):
-    div100 = years % 100
-
-
-    if div100 != 0:
-        answer = div100 % 4
-        if answer == 0:
-            temp = True
-        else:
-            temp = False
-        days_month_check(temp, days, months)
-
-    else:
-        answer = years % 400
-        if answer == 0:
-            temp = True
-        else:
-            temp = False
-        days_month_check(temp, days, months)
-
-
 def format(date):
     datelen = len(date)
-
-
-    if datelen != 10:
-        temp = False
+    if datelen != 8:
+        temp  = False
     else:
         temp = True
     return temp
@@ -69,29 +11,13 @@
 
 def split(date):
     days = int(date[0:2])
-
-
     months = int(date[3:5])
-    years = int(date[6:10])
-    leap_year(years, days, months)
+    years = int(date[6:8])
 
 
-def main(date):
-    x = format(date)
+def check_days_months():
 
 
-    while x == False:
-        print("INVALID!")
-        date = input("input a date")
-        x = format(date)
 
-    if x == True:
-        split(date)
-        if count == True:
-            print("THIS DATE IS VALID!")
-        elif count == False:
-            print("THIS DATE IS INVALID!")
-            date = input("input a date")
-            main(date)
+
 
-main(date)
\ No newline at end of file
